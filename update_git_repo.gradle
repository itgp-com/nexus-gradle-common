/**
 * A Gradle task to update a local Git repository.
 *
 * <p>
 * This task checks if a local Git repository exists under './build/nexus-gradle-common'.
 * If the repository doesn't exist, it clones the repository from the specified URL.
 * If the repository does exist, it pulls the latest changes from the remote.
 * </p>
 *
 * <p>
 * Usage: Run 'gradle updateGitRepo' to execute this task.
 * </p>
 *
 * <p>
 * Note: Ensure that Git is installed and available in the PATH on the machine where this task runs.
 * </p>
 */
task update_git_repo {
    doLast {
        int build = 1
        logger.error "update_git_repo build number '${build}' running."

        def repoDir = new File('./build/nexus-gradle-common')
        def gitDir = new File(repoDir, '.git')

        if (!gitDir.exists()) {
            // Clone the repository if it doesn't exist
            exec {
                workingDir = './build'
                commandLine 'git', 'clone', 'https://github.com/itgp-com/nexus-gradle-common.git'
            }
        } else {
            // Pull the latest changes if the repository exists
            exec {
                workingDir = repoDir
                commandLine 'git', 'pull'
            }
        }
    }
}


/**
 * A Gradle task of type 'Exec' that updates the Git repository and then compiles SCSS files.
 *
 * <p>
 * This task is designed to work on both Windows and Unix-like systems. It first determines the
 * operating system on which it's being executed. Based on that, it sets the appropriate shell
 * command to run the tasks in sequence.
 * </p>
 *
 * <ul>
 *   <li>On Windows, it uses the 'cmd' shell to execute the commands.</li>
 *   <li>On Unix-like systems, it uses the 'sh' shell.</li>
 * </ul>
 *
 * <p>
 * The sequence of operations is as follows:
 *   1. Execute the 'update_git_repo' task to update the Git repository. This is crucial because
 *      the 'compileScss' task definition might be modified during this update.
 *   2. If the above task succeeds, execute the 'compileScss' task to compile the SCSS files.
 *      Running this after the update ensures that the latest version of the 'compileScss' task
 *      is loaded and executed.
 * </p>
 *
 * <p>
 * The need to run these tasks in sequence arises from the fact that the 'compileScss' task
 * definition might be updated during the 'update_git_repo' task. Therefore, it's essential to
 * reload the Gradle build script to ensure the most recent version of the 'compileScss' task is
 * executed.
 * </p>
 *
 * <p>
 * Note: This task assumes that the 'gradle' command is available in the system's PATH. If using
 * the Gradle Wrapper, the command might need to be adjusted to './gradlew' or 'gradlew.bat'.
 * </p>
 *
 * @author David P
 */
task updateAndCompileScss(type: Exec) {
    if ((System.properties['os.name'] as String).toLowerCase().contains('windows')) {
        // Windows
        workingDir = '.' // projectDir
        commandLine 'cmd', '/c', 'gradle update_git_repo && gradle compileScss'
    } else {
        // Unix-like systems
        workingDir = '.' // projectDir
        commandLine 'sh', '-c', 'gradle update_git_repo && gradle compileScss'
    }
}